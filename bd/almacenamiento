<p dir="ltr" style="text-align:left;"><strong></strong></p>
<h3>Bases de datos relacionales</h3>
<p dir="ltr"><br></p>
<p dir="ltr">Las bases de datos relacionales se basan en el modelo relacional, donde los datos se organizan en tablas, con filas y columnas, que pueden estar relacionadas entre sí a través de claves primarias y ajenas. Las relaciones son una conexión lógica entre las tablas, basada en su interacción. Utilizan SQL (Structured Query Language) para definir, manipular y consultar datos. Este modelo permite relacionar tablas a través de un atributo común, de esta manera no es necesario organizar la base de datos de manera jerárquica.</p>
<p dir="ltr"><br></p>
<h4>Cuándo usarlas</h4>
<p dir="ltr"></p>
<ul>
    <li>Cuando los datos son estructurados y se requiere mantener integridad referencial.</li>
    <li>Para aplicaciones que requieren transacciones complejas y consistencia ACID (Atomicidad, Consistencia, Aislamiento, Durabilidad).</li>
    <li>Cuando se necesitan reportes y consultas SQL complejas.</li>
</ul>
<p></p>
<p dir="ltr"><br></p>
<h4>Ejemplos</h4>
<p dir="ltr"></p>
<ul>
    <li>MySQL: Popular en aplicaciones web y sistemas de gestión de contenido.</li>
    <li>PostgreSQL: Conocido por su robustez y compatibilidad con SQL estándar.</li>
    <li>Oracle Database: Usado en grandes corporaciones para aplicaciones empresariales.</li>
    <li>Microsoft SQL Server: Utilizado en aplicaciones de Microsoft y entornos empresariales.</li>
</ul>
<p></p>
<p dir="ltr"><br></p>
<h3>Bases de datos no relacionales (noSQL)</h3>
<p dir="ltr"><br></p>
<p dir="ltr">Las bases de datos NoSQL (Nosql o Not only SQL) están diseñadas para manejar datos no estructurados o semiestructurados y son más escalables que las bases de datos relacionales. No siguen un esquema fijo y permiten la manipulación de grandes volúmenes de datos muy rápido. Es decir, los datos se almacenan en esquemas flexibles, por ejemplo JSON, fácilmente escalables.</p>
<p dir="ltr"><br></p>
<h4>Cuándo Usarlas:</h4>
<p dir="ltr"></p>
<ul>
    <li>Cuando se requiere escalabilidad horizontal (escalar añadiendo más máquinas en lugar de mejorar las existentes).</li>
    <li>Para aplicaciones que manejan grandes volúmenes de datos.</li>
    <li>Cuando se prioriza la velocidad sobre la consistencia estricta.</li>
</ul>
<p></p>
<p dir="ltr"><br></p>
<h4>Subtipos</h4>
<p dir="ltr"><br></p>
<h5>Bases de Datos de Documentos</h5>
<p dir="ltr">Almacenan datos en formato de documentos, generalmente JSON, BSON o XML. No es necesario recorrer todas las columnas al realizar una consulta. Para aplicaciones que manejan datos semiestructurados.</p>
<p dir="ltr"><br></p>
<h5>Bases de Datos de Claves-Valor</h5>
<p dir="ltr">Almacenan datos como pares clave-valor, así proporciona acceso rápido y eficiente a los datos mediante una clave única. Tanto las claves como los valores pueden ser cualquier tipo de datos, desde objetos simples a complejos. Para cachés, sesiones de usuario y aplicaciones donde la velocidad de acceso es crítica.</p>
<p dir="ltr"><br></p>
<h5>Bases de Datos de Columnas</h5>
<p dir="ltr">Almacenan datos en columnas en lugar de filas, lo que permite compresión de datos y acceso rápido a grandes volúmenes. Para aplicaciones analíticas y Big Data.</p>
<p dir="ltr"><br></p>
<h5>Bases de Datos de Grafos</h5>
<p dir="ltr">Diseñadas para representar y gestionar relaciones complejas entre entidades mediante nodos y aristas. Los nodos se enlazan mediante aristas, sin necesidad de hacer uso de referencias mediante índices. Para aplicaciones que manejan redes sociales, sistemas de recomendación o cualquier aplicación que requiera análisis de grafos.</p>
<p dir="ltr"><br></p>
<h5>Ejemplos por subtipo</h5>
<p dir="ltr"></p>
<ul>
    <li>Bases de datos de documentos: MongoDB, CouchDB.</li>
    <li>Bases de datos de claves-valor: Redis, Amazon DynamoDB.</li>
    <li>Bases de datos de columnas: Apache Cassandra, HBase.</li>
    <li>Bases de datos de grafos: Neo4j, Amazon Neptune.</li>
</ul>
<p></p>
<p dir="ltr"><br></p>
<h3>Almacén de datos (Data warehouse)&nbsp;</h3>
<p dir="ltr"><br></p>
<p dir="ltr"><span style="white-space:normal;"><span style="white-space:pre;"> </span>Un almacén de datos es un sistema de gestión de datos que centraliza y fusiona grandes cantidades de datos de múltiples fuentes, como transacciones de puntos de venta, automatización del marketing, gestión de relaciones con clientes, etc.&nbsp; Estos sistemas permiten ejecutar análisis potentes sobre grandes cantidades de datos, de formas que una base estándar no puede. La mayoría de los almacenes de datos cuentan con capacidades de análisis y herramientas de visualización y presentación de datos.</span></p>
<p dir="ltr"><img src="https://moodle.icjardin.com/draftfile.php/109308/user/draft/72490927/datawarehouse.png" alt="diagrama" width="825" height="182" class="img-fluid atto_image_button_text-bottom"><br></p>
<p dir="ltr">Un almacén de datos suele incluir:</p>
<p dir="ltr"></p>
<ul>
    <li>Una base de datos relacional para almacenar y gestionar los datos.</li>
    <li>ELT para preparar los datos para el análisis.</li>
    <li>Análisis estadísticos, informes y funciones de extracción de datos.</li>
    <li>Herramientas de análisis de clientes para visualizar y presentar datos.</li>
</ul>
<p></p>
<p dir="ltr"><br></p>
<p dir="ltr">Los data warehouses tienen cuatro características principales.</p>
<p dir="ltr"></p>
<ul>
    <li>Orientados a sujetos: Pueden analizar datos sobre un tema particular o área funcional, por ejemplo ventas.</li>
    <li>Integrados: Crean uniformidad entre los distintos tipos de datos y fuentes.</li>
    <li>No volátiles: La información que entra al data warehouse no cambia.</li>
    <li>Variaciones: Tiene en cuenta las variaciones a lo largo del tiempo.</li>
</ul>
<p></p>
<p dir="ltr"><br></p>
<h4>Arquitectura de los data warehouse</h4>
<p dir="ltr"><br></p>
<p dir="ltr">Existen diferentes tipos de arquitecturas de almacenes de datos según las necesidades de la organización. Estas son las más comunes:</p>
<h5>Sencilla</h5>
<p dir="ltr">Todos los data warehouses comparten un diseño básico en el que los metadatos, los datos de resumen y los datos sin procesar se almacenan en el repositorio central del almacén. En uno de los lados, el repositorio se alimenta de fuentes de datos y, en el otro, los usuarios finales acceden para las tareas de análisis, elaboración de informes y extracción.</p>
<h5>Sencilla con zona de preparación</h5>
<p dir="ltr">Es necesario limpiar y procesar los datos operativos antes de colocarlos en el almacén. Aunque esto se puede hacer mediante programación, muchos data warehouses añaden una zona de preparación de datos antes de introducirlos en el almacén, a fin de simplificar la preparación.</p>
<h5>Radial</h5>
<p dir="ltr">Al añadir data marts entre el repositorio central y los usuarios finales, las organizaciones pueden personalizar su data warehouse para atender a varias áreas de negocio. Cuando los datos ya están listos para el uso, se mueven al data mart correspondiente.</p>
<h5>Entorno de pruebas</h5>
<p dir="ltr">Los entornos de pruebas (sandbox) son zonas seguras, privadas y protegidas donde las empresas pueden hacer pruebas sin tener que cumplir con las reglas y los protocolos formales del data warehouse.</p>
<p dir="ltr"><br></p>
<h4>Almacén de datos tradicional vs almacén de datos basado en la nube</h4>
<p dir="ltr"><br></p>
<p dir="ltr">Los tradicionales usan datos de bases de datos relacionales, sistemas transaccionales, aplicaciones empresariales y otros sistemas de origen. Están diseñados para capturar subconjuntos de datos en lotes y almacenarlos en esquemas rígidos. Esto los hace inadecuados para consultas espontáneas o análisis en tiempo real. Además, las empresas necesitan adquirir su propio hardware y software con almacén de datos on premise,dificultando su mantenimiento y escalabilidad.</p>
<p dir="ltr"><br></p>
<p dir="ltr">Un almacén de datos en la nube no implica ninguna desventaja con respecto a un almacén de datos tradicional, sino que amplía las funciones y se ejecuta en un servicio totalmente gestionado en la nube. El almacenamiento de datos en la nube ofrece escalabilidad instantánea para satisfacer los cambios en los requisitos empresariales y un potente procesamiento de datos para atender consultas analíticas complejas.&nbsp;</p>
<p dir="ltr"><br></p>
<h3>Lago de datos (Data lake)</h3>
<p dir="ltr"><br></p>
<p dir="ltr">Un data lake, es un entorno de almacenamiento de datos. A diferencia de un data warehouse, puede almacenar tanto datos estructurados como no estructurados, y no requiere un esquema definido para el almacenamiento. Esto hace que tenga una flexibilidad muy útil para los analistas de datos. Los data lakes pueden almacenar datos en su formato nativo y procesar cualquier variedad de datos, sin tener en cuenta los límites de tamaño.</p>
<p dir="ltr"><br></p>
<h4>¿Por qué elegir un data lake?</h4>
<p dir="ltr"></p>
<ul>
    <li>Disminución de costes: los datos son procesados según sea necesario, lo que reduce los costes de preparación sobre el procesamiento inicial.</li>
    <li>Simplificación de la administración de datos</li>
    <li>Incorporación de IA y aprendizaje automático</li>
    <li>Aceleración de generación de estadísticas</li>
    <li>Sistema muy flexible y altamente escalable</li>
    <li>Mejora de seguridad y control</li>
</ul>
<p dir="ltr"><br></p>
<p dir="ltr">Este sistema es clave para el Big Data, ya que proporciona la infraestructura ideal para poder gestionar mucha información de forma ágil y eficiente.</p>
<p dir="ltr"><br></p>
<h3>Data lakehouse</h3>
<p dir="ltr"><br></p>
<p dir="ltr">Esta arquitectura de datos combina un data lake y un almacén de datos. Permiten que las organizaciones usen almacenamiento de bajo costo para almacenar grandes cantidades de datos sin procesar y proporcionar funciones de estructura y administración de datos.&nbsp;</p>
<p dir="ltr"><img src="https://moodle.icjardin.com/draftfile.php/109308/user/draft/72490927/datalakehouse.png" alt="arquitectura" width="753" height="336" class="img-fluid atto_image_button_text-bottom"><br></p>
<p dir="ltr">Estas son las principales características de un data lakehouse</p>
<p dir="ltr"></p>
<ul>
    <li>Almacén de datos de bajo costo: Para todo tipo de datos (estructurados, semiestructurados y no estructurados)</li>
    <li>Funciones de administración de datos: Para aplicar esquemas, administración de datos, procesos ELT y limpieza de datos.</li>
    <li>Compatibilidad con transacciones: Para propiedades ACID y garantizar coherencia de datos cuando varios usuarios interactúan con los datos a la vez.</li>
    <li>Formatos de almacenamiento estandarizados</li>
    <li>Transmisión de extremo a extremo: Para admitir transferencia de datos y generación de estadísticas en tiempo real.</li>
    <li>Recursos de procesamiento y almacenamiento separados: Garantiza la escalabilidad.</li>
    <li>Reducción de redundancia de datos.</li>
</ul>
<p dir="ltr"><img src="https://moodle.icjardin.com/draftfile.php/109308/user/draft/72490927/tablacomparativa.png" alt="tabla" width="692" height="495" class="img-fluid atto_image_button_text-bottom"><br></p>
<p></p>
